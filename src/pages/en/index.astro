---
import Layout from '@layouts/Layout.astro';
import profileData from '@data/profile.json';

const { basic, links, research, presentations, experience, projects, news } = profileData;

// Get the most recent news items (limited to 3)
const recentNews = news?.slice(0, 3) || [];

// Select featured items for the combined activities section
const featuredActivities = [...projects, ...experience.slice(0, 3-projects.length)];
---

<Layout>
  <section class="py-16 md:py-24 bg-gradient-to-br from-blue-50 to-purple-50 rounded-xl mb-12">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto text-center">
        <div class="mb-8 flex justify-center">
          <img 
            src="/profile-photo.jpg" 
            alt="Tatsuhiko Akiyama" 
            class="w-32 h-32 rounded-full object-cover border-4 border-white shadow-md"
          />
        </div>
        <h1 class="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          {basic.name}
        </h1>
        <p class="text-xl text-gray-700 mb-8">{basic.bio}</p>
        
        <div class="flex flex-wrap justify-center gap-4">
          {links.map(link => (
            <a 
              href={link.url} 
              target="_blank" 
              rel="noopener noreferrer"
              class="inline-flex items-center px-5 py-2 border border-gray-300 rounded-full text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors"
            >
              {link.name}
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
          ))}
        </div>
      </div>
    </div>
  </section>

  {recentNews.length > 0 && (
    <section class="mb-16">
      <div class="container mx-auto px-4">
        <h2 class="text-2xl font-bold mb-6">News</h2>
        <div class="space-y-4">
          {recentNews.map(item => (
            <div class="bg-white p-5 rounded-lg shadow-sm border border-gray-100">
              <div class="flex flex-col md:flex-row md:items-center gap-3">
                <span class="inline-block px-3 py-1 bg-blue-50 text-blue-800 rounded-full text-sm whitespace-nowrap">
                  {new Date(item.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}
                </span>
                <h3 class="font-bold">{item.title}</h3>
              </div>
              <p class="text-gray-700 mt-2">{item.description}</p>
              {item.link && (
                <a 
                  href={item.link} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="inline-flex items-center mt-3 text-blue-600 hover:text-blue-800"
                >
                  Read more
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <section class="mb-16">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl font-bold mb-6">Activities</h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {featuredActivities.map(item => {
          const isProject = 'tags' in item;
          return (
            <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
              {isProject && item.image && (
                <img 
                  src={item.image} 
                  alt={item.title} 
                  class="w-full h-48 object-cover mb-4 rounded-md"
                />
              )}
              <h3 class="font-bold mb-2">{item.title}</h3>
              <p class="text-gray-700 mb-3 line-clamp-4">{item.description}</p>
              
              {/* Project tags */}
              {isProject && item.tags && (
                <div class="flex flex-wrap gap-2">
                  {item.tags.slice(0, 3).map(tag => (
                    <span class="inline-block px-2 py-1 text-xs bg-blue-50 text-blue-700 rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              
              {/* Experience links */}
              {!isProject && item.links && item.links.length > 0 && (
                <div class="flex gap-2 flex-wrap">
                  {item.links.map(link => (
                    <a 
                      href={link.url} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="text-sm text-blue-600 hover:text-blue-800 hover:underline"
                    >
                      {link.name}
                    </a>
                  ))}
                </div>
              )}
            </div>
          );
        })}
      </div>
      <div class="text-center mt-8">
        <a href="/projects" class="inline-flex items-center px-5 py-2 border border-transparent rounded-md font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors">
          View All projects
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      </div>
    </div>
  </section>

  <section class="mb-16">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl font-bold mb-6">Recent Presentations</h2>
      <div class="grid md:grid-cols-2 gap-6">
        {presentations.slice(0, 2).map(presentation => (
          <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
            <h3 class="font-bold mb-2">{presentation.title}</h3>
            <p class="text-sm text-gray-500 mb-3">{presentation.venue} ({presentation.year})</p>
            
            {presentation.links && presentation.links.length > 0 && (
              <div class="flex gap-3 flex-wrap">
                {presentation.links.map(link => (
                  <a 
                    href={link.url} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="text-sm text-blue-600 hover:text-blue-800 hover:underline inline-flex items-center"
                  >
                    {link.name}
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                    </svg>
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
      </div>
      <div class="text-center mt-8">
        <a href="/research" class="inline-flex items-center px-5 py-2 border border-transparent rounded-md font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors">
          View All Research
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      </div>
    </div>
  </section>

</Layout>